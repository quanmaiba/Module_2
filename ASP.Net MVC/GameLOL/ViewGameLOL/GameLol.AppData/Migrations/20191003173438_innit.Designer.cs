// <auto-generated />
using System;
using GameLol.AppData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GameLol.AppData.Migrations
{
    [DbContext(typeof(GameLolContext))]
    [Migration("20191003173438_innit")]
    partial class innit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GameLol.DoMain.DescriptionHero", b =>
                {
                    b.Property<int>("DescriptionHeroID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescriptionOfHero");

                    b.Property<int>("HeroID");

                    b.Property<string>("NameDescriptionHero");

                    b.HasKey("DescriptionHeroID");

                    b.HasIndex("HeroID");

                    b.ToTable("DescriptionHeroes");
                });

            modelBuilder.Entity("GameLol.DoMain.HeroLol", b =>
                {
                    b.Property<int>("HeroID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("HitRangeHeroID");

                    b.Property<string>("NameHero");

                    b.HasKey("HeroID");

                    b.HasIndex("HitRangeHeroID");

                    b.ToTable("HeroLols");
                });

            modelBuilder.Entity("GameLol.DoMain.HitRangeHero", b =>
                {
                    b.Property<int>("HitRangeHeroID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameHitRangeHero");

                    b.HasKey("HitRangeHeroID");

                    b.ToTable("HitRangeHeros");
                });

            modelBuilder.Entity("GameLol.DoMain.PropertyHero", b =>
                {
                    b.Property<int>("PropertyID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HeroID");

                    b.Property<string>("NamePoperty");

                    b.Property<double>("RateProperty");

                    b.HasKey("PropertyID");

                    b.HasIndex("HeroID");

                    b.ToTable("PropertyHeroes");
                });

            modelBuilder.Entity("GameLol.DoMain.RoleSkin", b =>
                {
                    b.Property<int>("RoleSkinID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameRoleSkin");

                    b.HasKey("RoleSkinID");

                    b.ToTable("RoleSkins");
                });

            modelBuilder.Entity("GameLol.DoMain.RoleSkinHero", b =>
                {
                    b.Property<int>("HeroID");

                    b.Property<int>("RoleSkinID");

                    b.HasKey("HeroID", "RoleSkinID");

                    b.HasIndex("RoleSkinID");

                    b.ToTable("RoleSkinHero");
                });

            modelBuilder.Entity("GameLol.DoMain.SkillHero", b =>
                {
                    b.Property<int>("SkillHeroId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescriptionSkinHero");

                    b.Property<int>("HeroID");

                    b.Property<string>("NameSkillHero");

                    b.HasKey("SkillHeroId");

                    b.HasIndex("HeroID");

                    b.ToTable("SkillHeroes");
                });

            modelBuilder.Entity("GameLol.DoMain.SkinHero", b =>
                {
                    b.Property<int>("SkinHeroID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescriptionSkinHero");

                    b.Property<int>("HeroID");

                    b.Property<string>("NameSkinHero");

                    b.HasKey("SkinHeroID");

                    b.HasIndex("HeroID");

                    b.ToTable("SkinHeroes");
                });

            modelBuilder.Entity("GameLol.DoMain.DescriptionHero", b =>
                {
                    b.HasOne("GameLol.DoMain.HeroLol", "HeroLol")
                        .WithMany("Descriptions")
                        .HasForeignKey("HeroID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GameLol.DoMain.HeroLol", b =>
                {
                    b.HasOne("GameLol.DoMain.HitRangeHero", "HitRangeHero")
                        .WithMany("HeroLols")
                        .HasForeignKey("HitRangeHeroID");
                });

            modelBuilder.Entity("GameLol.DoMain.PropertyHero", b =>
                {
                    b.HasOne("GameLol.DoMain.HeroLol", "HeroLol")
                        .WithMany("PropertyHeroes")
                        .HasForeignKey("HeroID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GameLol.DoMain.RoleSkinHero", b =>
                {
                    b.HasOne("GameLol.DoMain.HeroLol", "HeroLol")
                        .WithMany("RoleSkinHeroes")
                        .HasForeignKey("HeroID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GameLol.DoMain.RoleSkin", "RoleSkin")
                        .WithMany("RoleSkinHeroes")
                        .HasForeignKey("RoleSkinID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GameLol.DoMain.SkillHero", b =>
                {
                    b.HasOne("GameLol.DoMain.HeroLol", "HeroLol")
                        .WithMany("SkillHeroes")
                        .HasForeignKey("HeroID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GameLol.DoMain.SkinHero", b =>
                {
                    b.HasOne("GameLol.DoMain.HeroLol", "HeroLol")
                        .WithMany("SkinHeroes")
                        .HasForeignKey("HeroID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
